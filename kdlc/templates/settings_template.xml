<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
<entry key="node_file" type="xstring" value="settings.xml"/>
<config key="flow_stack"/>
<config key="internal_node_subsettings">
<entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
</config>
<config key="model">
    {% for item in model recursive %}
    {% if item.data_type=="config" %}
        {% set config_items = {} %}
        {% for key, value in item.items() %}
            {% if key=="data_type" %}
            {% else %}
                {% do config_items.update({"key": key}) %}
                {% do config_items.update({"value": value}) %}
            {% endif %}
        {% endfor %}
        <config key="{{config_items['key']}}">
        {{ loop (config_items['value']) }}
        </config>
    {% else %}
        {% set entry_items = {} %}
        {% for key, value in item.items() %}
            {% if key=="data_type" %}
                {% do entry_items.update({"type": value}) %}
            {% elif key=="isnull" %}
                {% do entry_items.update({"isnull": "true"}) %}
            {% else %}
                {% do entry_items.update({"key": key}) %}
                {% do entry_items.update({"value": value}) %}
            {% endif %}
        {% endfor %}
        {% if entry_items.isnull is defined %}
            <entry isnull="true" key="{{entry_items['key']}}" type="{{entry_items['type']}}" value="{{entry_items['value']}}" />
        {% else %}
            <entry key="{{entry_items['key']}}" type="{{entry_items['type']}}" value="{{entry_items['value']}}" />
        {% endif %}
    {% endif %}
    {% endfor %}
</config>
<entry key="customDescription" type="xstring" isnull="true" value=""/>
<entry key="state" type="xstring" value="CONFIGURED"/>
<entry key="factory" type="xstring" value="{{ node.settings.factory }}"/>
<entry key="node-name" type="xstring" value="{{ node.settings.name }}"/>
<entry key="node-bundle-name" type="xstring" value="{{ node.settings.bundle_name }}"/>
<entry key="node-bundle-symbolic-name" type="xstring" value="{{ node.settings.bundle_symbolic_name }}"/>
<entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-bundle-version" type="xstring" value="{{ node.settings.bundle_version }}"/>
<entry key="node-feature-name" type="xstring" value="{{ node.settings.feature_name }}"/>
<entry key="node-feature-symbolic-name" type="xstring" value="{{ node.settings.feature_symbolic_name }}"/>
<entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-feature-version" type="xstring" value="{{ node.settings.feature_version }}"/>
<config key="factory_settings"/>
<entry key="name" type="xstring" value="{{ node.settings.name }}"/>
<entry key="hasContent" type="xboolean" value="true"/>
<entry key="isInactive" type="xboolean" value="false"/>
<config key="ports">
<config key="port_1">
<entry key="index" type="xint" value="1"/>
<entry key="port_dir_location" type="xstring" isnull="true" value=""/>
</config>
</config>
<config key="filestores">
<entry key="file_store_location" type="xstring" isnull="true" value=""/>
<entry key="file_store_id" type="xstring" isnull="true" value=""/>
</config>
</config>
